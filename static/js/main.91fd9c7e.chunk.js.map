{"version":3,"sources":["components/Loader/Loader.tsx","components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","api/comments.ts","App.tsx","index.tsx"],"names":["Loader","className","PostsList","postsList","selectedPostId","downLoadComments","downloadPostDetails","length","map","post","classNames","id","userId","title","type","onClick","postId","NewCommentForm","action","method","name","placeholder","PostDetails","postComments","postDetails","useState","showComments","setShowComments","counterComments","showLoaderForTitlePost","showLoaderForComments","comment","formMethod","body","BASE_URL","getUserPosts","a","endPoint","console","log","fetch","response","ok","Error","headers","get","includes","Promise","reject","json","getPostDetails","getPostComments","App","setPostsList","currentUser","setCurrentUser","setSelectedPostId","createdAt","updatedAt","setPostDetails","setPostComments","downloadPosts","posts","newPostDetails","comments","defaultValue","onChange","e","target","value","disabled","style","visibility","ReactDOM","render","document","getElementById"],"mappings":"qXAGaA,EAAmB,kBAC9B,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,uBCONC,G,MAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,eACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,oBASA,OACE,sBAAKL,UAAU,YAAf,UACE,wCACA,mDAAoBE,EAAUI,UAC7BJ,EAAUI,OAAS,GAClB,cAAC,EAAD,IAGF,oBAAIN,UAAU,kBAAd,SACGE,EAAUK,KAAI,SAACC,GAAD,OACb,qBAEER,UAAWS,IAAW,kBACpB,CAAE,0BAA4BD,EAAKE,KAAOP,IAC5C,UAAQ,cAJV,UAME,gCACE,6CAAcK,EAAKG,OAAnB,SACCH,EAAKE,GAFR,IAIGF,EAAKI,SAGR,wBACEC,KAAK,SACLb,UAAU,2BACVc,QAAS,kBA/BIC,EA+BkBP,EAAKE,GA9B9CN,EAAiBW,QACjBV,EAAoBU,GAFE,IAACA,GA4Bf,SAKIZ,IAAmBK,EAAKE,GAAM,QAAU,WAjBvCF,EAAKE,cC7BTM,G,MAAkC,kBAC7C,uBACEhB,UAAU,iBACViB,OAAO,GACPC,OAAO,GAHT,UAKE,qBAAKlB,UAAU,aAAf,SACE,uBACEa,KAAK,OACLM,KAAK,OACLC,YAAY,YACZpB,UAAU,4BAId,qBAAKA,UAAU,aAAf,SACE,uBACEa,KAAK,OACLM,KAAK,QACLC,YAAY,aACZpB,UAAU,4BAId,qBAAKA,UAAU,aAAf,SACE,0BACEmB,KAAK,OACLC,YAAY,oBACZpB,UAAU,4DAId,wBACEa,KAAK,SACLb,UAAU,uCAFZ,gCClBSqB,G,MAA+B,SAAC,GAGtC,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEA,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAkBL,EAAahB,OAC/BsB,GAA0BL,EAAYX,MACtCiB,GAAyBP,EAE/B,OACE,sBAAKtB,UAAU,cAAf,UACE,+CAEA,0BAASA,UAAU,oBAAnB,UACI4B,GACG,cAAC,EAAD,IAEL,4BAAIL,EAAYX,WAGlB,0BAASZ,UAAU,wBAAnB,UACI6B,GACG,cAAC,EAAD,IAEL,wBACEhB,KAAK,SACLb,UAAU,6BACVc,QAAS,kBAAMY,GAAiBD,IAHlC,SAKIA,EAAY,eACFE,EADE,aAEV,kBAGJF,GACA,oBACEzB,UAAU,oBACV,UAAQ,WAFV,SAIGsB,EAAaf,KAAI,SAACuB,GAAD,OAChB,qBAEE9B,UAAU,yBAFZ,UAIE,wBACEa,KAAK,SACLb,UAAU,oCACV+B,WAAW,SAHb,eAOA,4BACGD,EAAQE,SAXNF,EAAQpB,YAmBvB,kCACE,qBAAKV,UAAU,4BAAf,SACE,cAAC,EAAD,CACEQ,KAAMe,aCrFLU,EAAW,oCAwBjB,SAAeC,EAAtB,kC,4CAAO,WAA4BvB,GAA5B,mBAAAwB,EAAA,4DACU,iBACW,SAEpBC,EAJD,UAIeH,GAJf,OAKS,MAAXtB,EAHuB,SADX,iBAMAA,GAIf0B,QAAQC,IAAI,UAAW3B,EAAQ,YAAayB,GAXvC,SAakBG,MAAMH,GAbxB,WAaCI,EAbD,QAeSC,GAfT,sBAgBG,IAAIC,MAAM,SAhBb,oBAmBAF,EAASG,QAAQC,IAAI,uBAnBrB,OAmBA,EAAsCC,SAAS,oBAnB/C,0CAqBIC,QAAQC,OAAO,kCArBnB,iCAwBEP,EAASQ,QAxBX,6C,sBA2BA,SAAeC,EAAtB,kC,4CAAO,WAA8BlC,GAA9B,mBAAAoB,EAAA,4DACU,UACTC,EAFD,UAEeH,GAFf,OACU,WADV,OAEmClB,GAGxCsB,QAAQC,IAAI,UAAWvB,EAAQ,YAAaqB,GALvC,SAOkBG,MAAMH,GAPxB,WAOCI,EAPD,QASSC,GATT,sBAUG,IAAIC,MAAM,SAVb,oBAaAF,EAASG,QAAQC,IAAI,uBAbrB,OAaA,EAAsCC,SAAS,oBAb/C,0CAeIC,QAAQC,OAAO,kCAfnB,iCAkBEP,EAASQ,QAlBX,6C,sBCnDA,IAAMf,EAAW,oCAEjB,SAAeiB,EAAtB,kC,4CAAO,WAA+BnC,GAA/B,mBAAAoB,EAAA,4DACU,oBACTC,EAFD,UAEeH,GAFf,OACU,qBADV,OAEmClB,GAGxCsB,QAAQC,IAAI,UAAWvB,EAAQ,YAAaqB,GALvC,SAOkBG,MAAMH,GAPxB,WAOCI,EAPD,QASSC,GATT,sBAUG,IAAIC,MAAM,SAVb,oBAaAF,EAASG,QAAQC,IAAI,uBAbrB,OAaA,EAAsCC,SAAS,oBAb/C,0CAeIC,QAAQC,OAAO,kCAfnB,iCAkBEP,EAASQ,QAlBX,6C,sBCOP,IAuHeG,EAvHO,WACpB,MAAkC3B,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkBkD,EAAlB,KACA,EAAsC5B,mBAAS,IAA/C,mBAAO6B,EAAP,KAAoBC,EAApB,KACA,EAA4C9B,mBAAS,IAArD,mBAAOrB,EAAP,KAAuBoD,EAAvB,KACA,EAAsC/B,mBAAS,CAC7Cd,GAAI,GACJC,OAAQ,GACRC,MAAO,GACPoB,KAAM,GACNwB,UAAW,GACXC,UAAW,KANb,mBAAOlC,EAAP,KAAoBmC,EAApB,KAQA,EAAwClC,mBAAS,IAAjD,mBAAOF,EAAP,KAAqBqC,EAArB,KAEMC,EAAa,uCAAG,WAAOjD,GAAP,eAAAwB,EAAA,yDAEpBE,QAAQC,IAAI3B,GAER0C,IAAgB1C,EAJA,gCAKEuB,EAAavB,GALf,OAKZkD,EALY,OAOlBN,EAAkB,IAClBG,EAAe,CACbhD,GAAI,GACJC,OAAQ,GACRC,MAAO,GACPoB,KAAM,GACNwB,UAAW,GACXC,UAAW,KAEbH,EAAe3C,GACfyC,EAAaS,GAjBK,2CAAH,sDAqBbxD,EAAmB,uCAAG,WAAOU,GAAP,eAAAoB,EAAA,6DAE1BE,QAAQC,IAAIvB,GAFc,SAIGkC,EAAelC,GAJlB,OAIpB+C,EAJoB,OAM1BJ,EAAeI,GANW,2CAAH,sDASnB1D,EAAgB,uCAAG,WAAOM,GAAP,eAAAyB,EAAA,yDACnBhC,IAAmBO,EADA,gBAErB6C,EAAkB,IAFG,sCAIEL,EAAgBxC,GAJlB,OAIfqD,EAJe,OAMrBR,EAAkB7C,GAClBiD,EAAgBI,GAPK,2CAAH,sDAWtB,OACE,sBAAK/D,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACVgE,aAAa,UACbC,SAAU,SAAAC,GAAC,OAAIN,EAAcM,EAAEC,OAAOC,QAHxC,UAKE,wBAAQA,MAAM,UAAUC,UAAQ,EAAhC,uBAGA,wBAAQD,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAMpE,UAAU,YAAhB,UACGqD,GACC,qBAAKrD,UAAU,eAAf,SACE,cAAC,EAAD,CACEE,UAAWA,EACXC,eAAgBA,EAChBE,oBAAqBA,EACrBD,iBAAkBA,MAKxB,qBACEJ,UAAU,eACVsE,MAAO,CACLC,WAAW,GAAD,OAAMpE,EAA4B,UAAX,WAHrC,SAMIoB,EAAYb,GAKZ,cAAC,EAAD,CACEY,aAAcA,EACdC,YAAaA,IANf,8BACE,cAAC,EAAD,eC7GdiD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91fd9c7e.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Loader } from '../Loader';\nimport './PostsList.scss';\n\ntype Props = {\n  postsList: Post[];\n  selectedPostId: string;\n  downLoadComments: (id: string) => void;\n  downloadPostDetails: (postId: string) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  postsList,\n  selectedPostId,\n  downLoadComments,\n  downloadPostDetails,\n}) => {\n  // const [showPostsLoader, setShowPostsLoader] = useState(false);\n\n  const postsListHandle = (postId: string) => {\n    downLoadComments(postId);\n    downloadPostDetails(postId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <p>{`Count posts: ${postsList.length}`}</p>\n      {postsList.length > 0 || (\n        <Loader />\n      )}\n\n      <ul className=\"PostsList__list\">\n        {postsList.map((post: Post) => (\n          <li\n            key={post.id}\n            className={classNames('PostsList__item',\n              { 'PostsList__item--active': (post.id === selectedPostId) })}\n            data-cy=\"postDetails\"\n          >\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.id}\n              :\n              {post.title}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => postsListHandle(post.id)}\n            >\n              {(selectedPostId === post.id) ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  post: Post;\n};\n\nexport const NewCommentForm: React.FC<Props> = () => (\n  <form\n    className=\"NewCommentForm\"\n    action=\"\"\n    method=\"\"\n  >\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input NewCommentForm__input--textarea\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React, { useState } from 'react';\nimport { Loader } from '../Loader';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postComments: Comment[];\n  postDetails: Post;\n};\n\n// can't import from react-app-env.ts\ntype Comment = {\n  id: string;\n  postId: string;\n  createdAt: string;\n  updatedAt: string;\n  name: string;\n  email: string;\n  body: string;\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  postComments,\n  postDetails,\n}) => {\n  const [showComments, setShowComments] = useState(true);\n\n  const counterComments = postComments.length;\n  const showLoaderForTitlePost = !postDetails.title;\n  const showLoaderForComments = !postComments;\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        { showLoaderForTitlePost\n          && <Loader /> }\n\n        <p>{postDetails.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        { showLoaderForComments\n          && <Loader /> }\n\n        <button\n          type=\"button\"\n          className=\"PostDetails__button button\"\n          onClick={() => setShowComments(!showComments)}\n        >\n          { showComments\n            ? `Hide ${counterComments} comments`\n            : 'Show comments' }\n        </button>\n\n        { showComments && (\n          <ul\n            className=\"PostDetails__list\"\n            data-cy=\"postList\"\n          >\n            {postComments.map((comment: Comment) => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  formMethod=\"DELETE\"\n                >\n                  X\n                </button>\n                <p>\n                  {comment.body}\n                </p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            post={postDetails}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\n// const request = (url: string): Promise<never[]> => {\n//   return fetch(`${BASE_URL}${url}`)\n//     .then(response => {\n//       if (!response.ok) {\n//         // eslint-disable-next-line @typescript-eslint/no-throw-literal\n//         throw `${response.status} - ${response.statusText}`;\n//       }\n\n//       return response.json();\n//     });\n// };\n\n// export const getUserPosts = (userId: string) => {\n//   const endPoint = `${\n//     (userId === '0')\n//       ? '/posts'\n//       : `/posts?userId=${userId}`\n//   }`;\n\n//   return request(endPoint);\n// };\n\nexport async function getUserPosts(userId: string): Promise<never[]> {\n  const addUrl = '/posts?userId=';\n  const addUrlForAllUsers = '/posts';\n\n  const endPoint = `${BASE_URL}${\n    (userId === '0')\n      ? addUrlForAllUsers\n      : addUrl + userId\n  }`;\n\n  // eslint-disable-next-line no-console\n  console.log('userId:', userId, 'endPoint:', endPoint);\n\n  const response = await fetch(endPoint);\n\n  if (!response.ok) {\n    throw new Error('error');\n  }\n\n  if (!response.headers.get('content-type')?.includes('application/json')) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject('Content type is not supported');\n  }\n\n  return response.json();\n}\n\nexport async function getPostDetails(postId: string): Promise<Post> {\n  const addUrl = '/posts/';\n  const endPoint = `${BASE_URL}${addUrl}${postId}`;\n\n  // eslint-disable-next-line no-console\n  console.log('postId:', postId, 'endPoint:', endPoint);\n\n  const response = await fetch(endPoint);\n\n  if (!response.ok) {\n    throw new Error('error');\n  }\n\n  if (!response.headers.get('content-type')?.includes('application/json')) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject('Content type is not supported');\n  }\n\n  return response.json();\n}\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nexport async function getPostComments(postId: string): Promise<never[]> {\n  const addUrl = '/comments?postId=';\n  const endPoint = `${BASE_URL}${addUrl}${postId}`;\n\n  // eslint-disable-next-line no-console\n  console.log('postId:', postId, 'endPoint:', endPoint);\n\n  const response = await fetch(endPoint);\n\n  if (!response.ok) {\n    throw new Error('error');\n  }\n\n  if (!response.headers.get('content-type')?.includes('application/json')) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject('Content type is not supported');\n  }\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts, getPostDetails } from './api/posts';\nimport { getPostComments } from './api/comments';\nimport { Loader } from './components/Loader';\n\nconst App: React.FC = () => {\n  const [postsList, setPostsList] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState('');\n  const [postDetails, setPostDetails] = useState({\n    id: '',\n    userId: '',\n    title: '',\n    body: '',\n    createdAt: '',\n    updatedAt: '',\n  });\n  const [postComments, setPostComments] = useState([]);\n\n  const downloadPosts = async (userId: string) => {\n    // eslint-disable-next-line no-console\n    console.log(userId);\n\n    if (currentUser !== userId) {\n      const posts = await getUserPosts(userId);\n\n      setSelectedPostId('');\n      setPostDetails({\n        id: '',\n        userId: '',\n        title: '',\n        body: '',\n        createdAt: '',\n        updatedAt: '',\n      });\n      setCurrentUser(userId);\n      setPostsList(posts);\n    }\n  };\n\n  const downloadPostDetails = async (postId: string) => {\n    // eslint-disable-next-line no-console\n    console.log(postId);\n\n    const newPostDetails = await getPostDetails(postId);\n\n    setPostDetails(newPostDetails);\n  };\n\n  const downLoadComments = async (id: string) => {\n    if (selectedPostId === id) {\n      setSelectedPostId('');\n    } else {\n      const comments = await getPostComments(id);\n\n      setSelectedPostId(id);\n      setPostComments(comments);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            defaultValue=\"DEFAULT\"\n            onChange={e => downloadPosts(e.target.value)}\n          >\n            <option value=\"DEFAULT\" disabled>\n              Choose...\n            </option>\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        {currentUser && (\n          <div className=\"App__sidebar\">\n            <PostsList\n              postsList={postsList}\n              selectedPostId={selectedPostId}\n              downloadPostDetails={downloadPostDetails}\n              downLoadComments={downLoadComments}\n            />\n          </div>\n        )}\n\n        <div\n          className=\"App__content\"\n          style={{\n            visibility: `${!selectedPostId ? 'hidden' : 'visible'}`,\n          }}\n        >\n          {!postDetails.id ? (\n            <div>\n              <Loader />\n            </div>\n          ) : (\n            <PostDetails\n              postComments={postComments}\n              postDetails={postDetails}\n            />\n          )}\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}