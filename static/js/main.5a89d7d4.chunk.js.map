{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/posts.ts","api/comments.ts","App.tsx","index.tsx"],"names":["PostsList","postsList","selectedPostId","downLoadComments","className","length","map","post","userId","id","title","type","onClick","NewCommentForm","name","placeholder","PostDetails","postComments","forEach","comment","console","log","BASE_URL","addUrl","addUrlForAllUsers","getUserPosts","a","endPoint","fetch","response","ok","Error","headers","get","includes","Promise","reject","json","getPostComments","postId","App","useState","setPostsList","currentUser","setCurrentUser","setSelectedPostId","setPostComments","downloadPosts","posts","comments","onChange","e","target","value","style","visibility","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a89d7d4.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  postsList: Post[];\n  selectedPostId: string;\n  downLoadComments: (id: string) => void;\n};\n\nexport const PostsList: React.FC<Props> = ({\n  postsList,\n  selectedPostId,\n  downLoadComments,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <p>{`Count posts: ${postsList.length}`}</p>\n\n      <ul className=\"PostsList__list\">\n        {postsList.map((post: Post) => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n            data-cy=\"postDetails\"\n          >\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.id}\n              :\n              {post.title}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => downLoadComments(post.id)}\n            >\n              {(selectedPostId === post.id) ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm: React.FC = () => (\n  <form className=\"NewCommentForm\">\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Your name\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <input\n        type=\"text\"\n        name=\"email\"\n        placeholder=\"Your email\"\n        className=\"NewCommentForm__input\"\n      />\n    </div>\n\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"NewCommentForm__input NewCommentForm__input--textarea\"\n      />\n    </div>\n\n    <button\n      type=\"submit\"\n      className=\"NewCommentForm__submit-button button\"\n    >\n      Add a comment\n    </button>\n  </form>\n);\n","import React from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postComments: Comment[];\n};\n\nexport const PostDetails: React.FC<Props> = ({\n  postComments,\n}) => (\n  <div className=\"PostDetails\">\n    <h2>Post details:</h2>\n\n    <section className=\"PostDetails__post\">\n      <p>sunt aut facere repellat provident occaecati excepturi optio</p>\n    </section>\n\n    <section className=\"PostDetails__comments\">\n      <button type=\"button\" className=\"button\">Hide 2 comments</button>\n\n      <ul className=\"PostDetails__list\">\n        {postComments.forEach(comment => {\n          // eslint-disable-next-line no-console\n          console.log(comment);\n        })}\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>My first comment</p>\n        </li>\n\n        <li className=\"PostDetails__list-item\">\n          <button\n            type=\"button\"\n            className=\"PostDetails__remove-button button\"\n          >\n            X\n          </button>\n          <p>sad sds dfsadf asdf asdf</p>\n        </li>\n      </ul>\n    </section>\n\n    <section>\n      <div className=\"PostDetails__form-wrapper\">\n        <NewCommentForm />\n      </div>\n    </section>\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst addUrl = '/posts?userId=';\nconst addUrlForAllUsers = '/posts';\n\nexport async function getUserPosts(userId: string): Promise<never[]> {\n  const endPoint = `${BASE_URL}${\n    (userId === '0')\n      ? addUrlForAllUsers\n      : addUrl + userId\n  }`;\n\n  // eslint-disable-next-line no-console\n  console.log('userId:', userId, 'endPoint:', endPoint);\n\n  const response = await fetch(endPoint);\n\n  if (!response.ok) {\n    throw new Error('error');\n  }\n\n  if (!response.headers.get('content-type')?.includes('application/json')) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject('Content type is not supported');\n  }\n\n  return response.json();\n}\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst addUrl = '/comments?postId=';\n\nexport async function getPostComments(postId: string): Promise<never[]> {\n  const endPoint = `${BASE_URL}${addUrl}${postId}`;\n\n  // eslint-disable-next-line no-console\n  console.log('postId:', postId, 'endPoint:', endPoint);\n\n  const response = await fetch(endPoint);\n\n  if (!response.ok) {\n    throw new Error('error');\n  }\n\n  if (!response.headers.get('content-type')?.includes('application/json')) {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    return Promise.reject('Content type is not supported');\n  }\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\nimport { getPostComments } from './api/comments';\n\nconst App: React.FC = () => {\n  const [postsList, setPostsList] = useState([]);\n  const [currentUser, setCurrentUser] = useState('');\n  const [selectedPostId, setSelectedPostId] = useState('');\n  // const [selectedPost, setSelectedPost] = useState(null);\n  const [postComments, setPostComments] = useState([]);\n\n  const downloadPosts = async (userId = '0') => {\n    // eslint-disable-next-line no-console\n    console.log(userId);\n\n    if (currentUser !== userId) {\n      const posts = await getUserPosts(userId);\n\n      setCurrentUser(userId);\n      setPostsList(posts);\n\n      // eslint-disable-next-line no-console\n      // console.log('postsList', posts);\n\n      // eslint-disable-next-line no-console\n      // console.log(postsList);\n    }\n  };\n\n  const downLoadComments = async (id: string) => {\n    if (selectedPostId === id) {\n      setSelectedPostId('');\n    } else {\n      const comments = await getPostComments(id);\n\n      setSelectedPostId(id);\n      setPostComments(comments);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={e => downloadPosts(e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n\n        <p>{`selectedPostId: ${selectedPostId}`}</p>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postsList={postsList}\n            selectedPostId={selectedPostId}\n            downLoadComments={downLoadComments}\n          />\n        </div>\n\n        <div\n          className=\"App__content\"\n          style={{\n            visibility: `${!selectedPostId ? 'hidden' : 'visible'}`,\n          }}\n        >\n          <PostDetails\n            postComments={postComments}\n          />\n        </div>\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}